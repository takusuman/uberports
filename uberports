#!/bin/ksh
# uberports(8): Simple heap of shell hacks for installing Slackbuilds in the BSD Ports style.
# Copyright (c) MMXXI Luiz Antônio Rangel
# Licensed under Volkerdings-Slackware

# Include POSIX/Shell alternatives for UNIX commands (just in case of any Slackbuild using it) and system information
libposixalt_download='https://raw.githubusercontent.com/Projeto-Pindorama/mitzune/master/lib/posix-alt.shi'
. <(curl -s ${libposixalt_download})
. /etc/os-release
unset NAME ID VERSION_ID PRETTY_NAME ANSI_COLOR CPE_NAME HOME_URL SUPPORT_URL BUG_REPORT_URL
chdir(){ cd "${@}"; }
binary_name="${0}"
ports_directory='/usr/ports'
slackbuilds_mirror='git://git.slackbuilds.org/slackbuilds.git'
uberports_version='0.2'
LC_ALL='POSIX'
export binary_name ports_directory slackbuilds_mirror LC_ALL

fn_syncRepository(){
  repo_mirror_basename="${slackbuilds_mirror#*//}"
  repo_mirror_basename="${repo_mirror_basename%%/*}"
  printf 'Cloning repo via git (%s)\n' "${repo_mirror_basename}"
  git clone -v "${slackbuilds_mirror}" -b "${VERSION}" "${ports_directory}"
  unset VERSION
  exit 0
}

fn_updateRepository(){
 chdir "${ports_directory}"
 git pull -v origin "${VERSION}"
 chdir -
 exit 0
}

fn_searchPackages(){
  packages=(${@})
  packages_quant="${#@}"
  for ((i=0; i < "${packages_quant}"; i++)); do
    slackbuild="${packages[${i}]}"
    slackbuild_dir="`find ${ports_directory} -name ${slackbuild}`"
    . "${slackbuild_dir}"/*.info # Source .info file
   # Check if theres any dependencies/requirements
   if [ -z "${REQUIRES}" ]; then
     REQUIRES='None'
   fi
   printf '\
Package name: %s
Version: %s
Directory (build scripts): %s
Maintainer: %s
Hotline: %s
Dependencies: %s
' "${PRGNAM}" "${VERSION}" "${slackbuild_dir}" "${MAINTAINER}" "${EMAIL}" \
       	"${REQUIRES}"
  done
  return 0
}

fn_downloadSource(){
    . ./*.info # Source .info file
  download_url_basename="${DOWNLOAD#*//}"
  download_url_basename="${download_url_basename%%/*}"
  printf 'Downloading %s @ %s (%s).\n' "${PRGNAM}" "${VERSION}" "${download_url_basename}"
  curl -# -L "${DOWNLOAD}" -O
  exit 0
}

fn_printHelp(){
 printf '[USAGE]: %s [-S|-u|-s <pkg>|-d|-V|-h]\n' "${binary_name}"
 exit 0
}

fn_printVersion(){
 printf '
%s

Copyright (c) 2021 Luiz Antônio Rangel
Licensed under Volkerdings-Slackware
' "${uberports_version}"
}

fn_main(){
  OPTPARAMS="Sus:dV"
  while getopts "${OPTPARAMS}" OPT; do
    case "${OPT}" in
      "S") fn_syncRepository ;;
      "u") fn_updateRepository ;;
      "s") fn_searchPackages "${OPTARG}" ;;
      "d") fn_downloadSource;;
      "V") fn_printVersion ;;
      "?") fn_printHelp ;;
    esac
  done
}

fn_main ${@}
